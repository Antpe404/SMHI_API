library(devtools)
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("hadley/devtools")
package.skeleton(name="SMHI_API")
install.packages("roxygen2")
library(roxygen2)
bracky<-str_split(dirty,"\[ . \],")
bracky<-str_split(dirty,"\[.\],")
bracky<-str_split(dirty,"\[,")
bracky<-str_split(dirty,"\\[,")
library(stringr)
bracky<-str_split(dirty,"\\[ . \\],")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("RJSONIO", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
nbalink<-'http://stats.nba.com/stats/playbyplay/?GameID=0041400235&StartPeriod=1&EndPeriod=4'
nbatxt<- 'Documents/advR/pbp.txt'
pbp<-fromJSON(nbatxt,simplifyDataFrame = T)
asJSVars(pbp)
pbpx<-readLines("Documents/advR/pbp.txt")
pbpx
mystart<-str_locate(pbpx,"rowSet")[2] + 1
myend <-str_locate(pbpx,"]]") + 2
dirty<-substr(pbpx,start=mystart,stop=myend)
bracky<-str_split(dirty,"\\[ . \\],")
# allt mellan [  och   ],
getwd()
setwd("/Users/EmilsHem/")
nbalink<-'http://stats.nba.com/stats/playbyplay/?GameID=0041400235&StartPeriod=1&EndPeriod=4'
nbatxt<- 'Documents/advR/pbp.txt'
pbp<-fromJSON(nbatxt,simplifyDataFrame = T)
asJSVars(pbp)
pbpx<-readLines("Documents/advR/pbp.txt")
pbpx
mystart<-str_locate(pbpx,"rowSet")[2] + 1
myend <-str_locate(pbpx,"]]") + 2
dirty<-substr(pbpx,start=mystart,stop=myend)
bracky<-str_split(dirty,"\\[ . \\],")
bracky
dirty
bracky<-str_extract(dirty,"\\[ . \\],")
bracky
bracky<-str_extract(dirty,"\\[ .... \\],")
bracky<-str_extract(dirty,"\\[\\],")
bracky<-str_extract(dirty,"\\[.\\],")
fromJSON(dirty)
-str_locate(pbpx,"rowSet")[2]
str_locate(pbpx,"rowSet")[2] + 1
dirty
dirty<-substr(pbpx,start=mystart+5,stop=myend)
dirty
dirty<-substr(pbpx,start=mystart+4,stop=myend)
fromJSON(dirty)
bracky<-str_extract(dirty,"\\[.{1,}\\]")
bracky
bracky<-str_split(dirty,"\\[.{1,}\\]")
bracky
bracky<-str_split_all(dirty,"\\[.{1,}\\]")
bracky<-str_split(dirty,"\\[.{1,}\\]")
bracky<-unlist(str_split(dirty,"\\[.{1,}\\]"))
bracky# allt mellan [  och   ],
dirty<-substr(pbpx,start=mystart+3,stop=myend)
bracky<-unlist(str_split(dirty,"\\[.{1,}\\]"))
bracky# allt mellan [  och   ],
bracky<-unlist(str_split(dirty,"\\[.{1,150}\\]"))
bracky
bracky<-unlist(str_split(dirty,"\\[.{1,150}\\]\,"))
bracky<-unlist(str_split(dirty,"\\[.{1,150}\\]\\,"))
bracky# allt mellan [  och   ],
bracky<-unlist(str_subset(dirty,"\\[.{1,150}\\]\\,"))
bracky
bracky<-str_subset(dirty,"\\[.{1,150}\\]\\,")
bracky
bracky<-str_extract(dirty,"\\[.{1,150}\\]\\,")
bracky
bracky<-str_extract_all(dirty,"\\[.{1,150}\\]\\,")
bracky<-matrix(unlist(str_extract_all(dirty,"\\[.{1,150}\\]\\,")),ncol =1)
bracky# allt mellan [  och   ],
View(bracky)
str_split(bracky[1,1],",")
str_replace_all(bracky,"\")
str_replace_all(bracky,"\ " )
str_replace_all(bracky[1,1],"\ " ,replacement = ""  )
str_replace_all(bracky[1,1]," \\\" ,replacement = ""  )
str_replace_all(bracky[1,1],"\\" ,replacement = ""  )
str_replace_all(bracky[1,1],"\\\" ,replacement = ""  )
)
str_replace_all(bracky[1,1],"\\\$" ,replacement = ""  )
[:punct:]
str_replace_all(bracky[1,1],"\\" ,replacement = "")
fromJSON(bracky[1,1])
fromJSON(bracky[1,1])
str_replace_all(bracky[1,1],"\\" ,replacement = " ")
str_replace(bracky[1,1],"\\" ,replacement = " ")
str_replace(bracky[1,1],"\\" ,replacement = " ")
str_replace(bracky[1,1],"\ " ,replacement = " ")
str_replace(bracky[1,1],"\\\" " ,replacement = " ")
str_replace(bracky[1,1],"\\" " ,replacement = " ")
str_replace(bracky[1,1],"\\ " ,replacement = " ")
str_replace(bracky[1,1],"\\" ,replacement = " ")
str_replace(bracky[1,1],"^\\$" ,replacement = " ")
str_replace(bracky[1,1],"/\\/g" ,replacement = " ")
str_replace(bracky[1,1],"/\\/g" ,replacement = " ")
str_replace(bracky[1,1],"/\/g" ,replacement = " ")
str_replace(bracky[1,1],"/\\\/g" ,replacement = " ")
str_replace(bracky[1,1],"/\\/g" ,replacement = " ")
str_replace(bracky[1,1],"/.\\./g" ,replacement = " ")
str_replace(bracky[1,1],"/.\\ ./g" ,replacement = " ")
str_replace(bracky[1,1],"/.\\ ./g" ,replacement = "-")
str_replace(bracky[1,1],"/\\/g" ,replacement = "-")
str_replace(bracky[1,1],"/\\''/g" ,replacement = "-")
str_replace(bracky[1,1],"/\[\\\"/g" ,replacement = "-")
str_split(bracky[1,1],",")
str_replace(str_split(bracky[1,1],",")[1],"/\\/g",replacement = "")
str_replace(str_split(bracky[1,1],",")[1],"/\\/g",replacement = " ")
str_split(bracky[1,1],",")[1]
str_replace(str_split(bracky[1,1],",")[[1]],"/\\/g",replacement = " ")
str_split(bracky[1,1],",")[[1]]
str_replace(str_split(bracky[1,1],",")[[1]][1],"/\\/g",replacement = " ")
str_replace(str_split(bracky[1,1],",")[[1]][1],"/\\\"/g",replacement = " ")
str_replace(bracky[1,1],pattern = '/\\/g' ,replacement = "-")
install.packages
install.packages("rggobi")
library(rggobi)
install.packages("rggobi")
getwd()
setwd("/Users/EmilsHem/Documents/advR/SMHI_API")
